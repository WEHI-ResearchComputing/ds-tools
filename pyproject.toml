[project]
name = "ds-tools"
version = "0.1.0"
description = "Library of tools and integrations to help build dynamic user interfaces and complex Airflow workflows"
readme = "README.md"
authors = [
    { name = "James U", email = "tenseventyseven@gmail.com" }
]
requires-python = ">=3.13"
dependencies = [
    "pydantic>=2.11.7",
    "pydantic-settings>=2.9.1",
    "typer>=0.15.1",
    "opentelemetry-api>=1.34.1",
    "opentelemetry-sdk>=1.34.1",
    "structlog>=25.4.0",
    "boto3>=1.35.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.0",
    "moto[s3]>=5.0.0",
]

[project.scripts]
ds-tools = "ds_tools.cli:app"

[tool.ruff]
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
source = ["src/ds_tools"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]
